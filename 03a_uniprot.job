#!/bin/bash

#PBS -l walltime=20:00:00
#PBS -l nodes=1:ppn=2
#PBS -l vmem=150gb
#PBS -M tyler.peirce@my.jcu.edu.au
#PBS -m abe
#PBS -N uniprot
#PBS -S /bin/bash
cd $PBS_O_WORKDIR

. configfile.txt
mkdir $PWD/03_input
mkdir $PWD/03_results
mkdir $UNIDB
module load blast+

#cp $ASSM/02_Trinity-l400.fasta

#wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz
#wget ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/idmapping/idmapping_selected.tab.gz

#gunzip uniprot_sprot.fasta.gz  
#gunzip idmapping_selected.tab.gz  

#module load blast+
#makeblastdb -in uniprot_sprot.fasta -dbtype prot
#mv uniprot_sprot.fasta* idmapping_selected.tab $UNIDB/.

module purge
module load biopython

#cp $ASSM/02_Trinity-l400.fasta $DATADIR

# split data files and submit jobs
for FILE in $DATADIR/* ; do
echo "splitting $FILE..."
BASE=$(basename $FILE).uniprotblast
rm -r $CHUNKSDIR/$BASE $LOGDIR/$BASE
mkdir -p $CHUNKSDIR/$BASE $LOGDIR/$BASE 
cat $FILE | python $SCRIPTS/split_seqfile.py $CHUNKSDIR/$BASE/chunk $CHUNKSIZE

for CHUNK in $CHUNKSDIR/$BASE/chunk.*; do
echo "currnet chunkfile is $CHUNK"
CHUNKBASE=$(basename $CHUNK)
echo "current basefile is $CHUNKBASE"
echo "should be ready to submit jobs"
echo "chunks can be found in $CHUNKSDIR/$BASE"
echo "database can be found in $UNIDB"
echo "current chunk is $CHUNK"
echo "sample is $BASE"
echo "resultdir is $RESULTDIR"
echo "OUTPUT log will be $LOGDIR/$BASE/testoutput.$BASECHUNK.$BASE.out"
echo "ERROR log will be $LOGDIR/$BASE/testoutput.$BASECHUNK.$BASE.err"

RESULTS=$BLAST/$CHUNKBASE
echo "results wil be in $RESULTS"

qsub -o $LOGDIR/$BASE/testoutput.$CHUNKBASE.$BASE.out -e $LOGDIR/$BASE/testoutput.$CHUNKBASE.$BASE.err -F "$CHUNK $UNIDB $RESULTS" $PWD/03b_uniprot_blast.job

done

done

